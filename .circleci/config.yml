# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.1-node-browsers
        environment:
          RAILS_ENV: test

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      #- image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - run:
          name: install npm dependencies
          command: |
            bundle exec rails yarn:install

      - save_cache:
          paths:
            - ./vendor/bundle
            - ./node_modules
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}

      # Database setup
#      - run: bundle exec rake db:create
#      - run: bundle exec rake db:schema:load

#      - run:
#          name: build js
#          command: |
#            yarn build:release

      # run tests!
#      - run:
#          name: run tests
#          command: |
#            mkdir /tmp/test-results
#            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
#
#            bundle exec rspec --format progress \
#                            --format RspecJunitFormatter \
#                            --out /tmp/test-results/rspec.xml \
#                            --format progress \
#                            $TEST_FILES

      # lint
      - run:
          name: rubocop
          command: |
            bundle exec rubocop

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: ~/repo/tmp/screenshots
          destination: test-failed

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
#      - deploy
